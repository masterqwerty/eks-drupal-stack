apiVersion: apps/v1
kind: Deployment
metadata:
  name: # Name of your deployment. 
  labels:
    app: # App name
spec:
  replicas: 2
  selector:
    matchLabels:
      app: # App name
  template:
    metadata:
      labels:
        app: # App Name
    spec:
      volumes:
      - name: web-files
        emptyDir: {}
      - name: public-files
        nfs:
          server: # EFS DNS Name
          path: / # Path within EFS to mount to.
      containers:
      - name: drupal
        image: # ECR Image URI
        imagePullPolicy: "Always"
        resources:
          requests:
            cpu: "0.15" # This can be changed. This seemed to be a good number for vanilla drupal.
        env:
        - name: DB_HOST
          value: # RDS Endpoint
        - name: DB_PASSWORD
          value: # RDS Password
        - name: DB_NAME
          value: # RDS DB Name
        - name: DB_DRIVER
          value: # DB Driver, like mysql
        - name: DB_USER
          value: # RDS Username
        - name: DRUPAL_TRUSTED_HOST_PATTERNS
          value: # Trusted host patterns. Put "'.*'" for all. Yes, that's two sets of quotation marks.
        volumeMounts:
        - mountPath: /var/www/html
          name: web-files
        - mountPath: /var/www/html/web/sites/default/files
          name: public-files
        ports:
        - containerPort: 9000
      - name: nginx
        image: wodby/nginx:1.15-5.3.3
        imagePullPolicy: "Always"
        resources:
          requests:
            cpu: "0.15"
        env:
        - name: NGINX_STATIC_OPEN_FILE_CACHE
          value: "off"
        - name: NGINX_ERROR_LOG_LEVEL
          value: debug
        - name: NGINX_BACKEND_HOST
          value: localhost
        - name: NGINX_SERVER_ROOT
          value: /var/www/html/web
        - name: NGINX_VHOST_PRESET
          value: drupal8
        volumeMounts:
        - name: web-files
          mountPath: /var/www/html
        - name: public-files
          mountPath: /var/www/html/web/sites/default/files
        ports:
        - containerPort: 80
        readinessProbe:
          initialDelaySeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
          httpGet:
            path: /index.php
            port: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: # Auto Scaler Name
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: # Name of deployment from above
  minReplicas: 2 # Change these to be what you desire for min and max
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80 # Look into kubernetes documentation for more on what metrics you can use. This requires usage of the metrics-server. See README for more details.
---
apiVersion: v1
kind: Service
metadata:
  name: # HTTP Service name
  # Uncomment below if you wish to use a network load balancer instead of a classic load balancer. WARNING: This is an alpha feature of kubernetes.
  #annotations:
  #  service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: # App Name
---
apiVersion: v1
kind: Service
metadata:
  name: # Service name for exposing PHP
spec:
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    app: # App Name
